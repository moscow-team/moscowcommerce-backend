name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-validate:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Run tests with PostgreSQL
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpass
          SECURITY_JWT_SECRET_KEY: dummy-secret-for-testing
          SECURITY_JWT_EXPIRATION_TIME: 3600000
          IMGUR_CLIENT_ID: dummy-imgur-client-id
        run: mvn test -Dspring.profiles.active=test

      - name: Check code formatting with Spotless
        run: mvn spotless:check

      - name: Run TruffleHog secret scan
        run: |
          docker run --rm -v ${{ github.workspace }}:/repo ghcr.io/trufflesecurity/trufflehog:latest \
            filesystem /repo --only-verified --fail


      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: --path=. --report-format=json --report-path=gitleaks-report.json
